lines(pred$x, pred$y)
u_vec_gom <- quantile(gom, probs = seq(0, 0.9, by = 0.05))
gom_cv <- ithresh(data = gom, u_vec=u_vec_gom, n_v = 3)
u_vec_x <- quantile(x, probs = seq(0, 0.9, by = 0.05))
var_cv <- ithresh(data = x, u_vec=u_vec_x, n_v = 3)
var[,"time"]
head(var,'time')
head(var[, "time"])
tail(var[, "time"])
pred <- predict(var_cv, which_u="best", n_years=1, type="d")
par(mfrow=c(1, 1))
hist(x[x>best_u], probability=TRUE)
lines(pred$x, pred$y)
pred <- predict(var_cv, which_u="best", n_years=2, type="d")
par(mfrow=c(1, 1))
hist(x[x>best_u], probability=TRUE)
lines(pred$x, pred$y)
pred <- predict(var_cv, which_u="best", n_years=1, type="d")
par(mfrow=c(1, 1))
hist(x[x>best_u], probability=TRUE)
lines(pred$x, pred$y)
pred <- predict(var_cv, which_u="best", n_years=10, type="d") # what does n_years do?
par(mfrow=c(1, 1))
hist(x[x>best_u], probability=TRUE)
lines(pred$x, pred$y)
pred <- predict(var_cv, which_u="best", n_years=100, type="d") # what does n_years do?
par(mfrow=c(1, 1))
hist(x[x>best_u], probability=TRUE)
lines(pred$x, pred$y)
pred <- predict(var_cv, which_u="best", n_years=10, type="d") # what does n_years do?
par(mfrow=c(1, 1))
hist(x[x>best_u], probability=TRUE)
lines(pred$x, pred$y)
head(var[, c('X', 'time', 'cyclone_flag', 'X2')])
x <- var$X2
x <- var$X3
attr(x, 'npy') <- length(x) / 365
hist(x, breaks=50)
q_vec <- seq(.7, .99, by=0.01)
u_vec <- quantile(x, q_vec)
var_cv <- ithresh(x, u_vec=u_vec, n_v=2)
plot(var_cv, lwd = 2, add_legend = TRUE, legend_pos = "topright")
mtext("climate variable [?]", side = 3, line = 2.5)
best_u <- getmode(summary(var_cv)[, "best u"])
best_i <- getmode(summary(var_cv)[, "index of u_vec"])
best_q <- q_vec[best_i]
print(paste("best u:", best_u))
print(paste("best q:", best_q))
print(paste("number of excesses:", length(x[x>best_u])))
summary(var_cv)
pred <- predict(var_cv, which_u="best", n_years=10, type="d") # what does n_years do?
par(mfrow=c(1, 1))
hist(x[x>best_u], probability=TRUE)
lines(pred$x, pred$y)
pred <- predict(var_cv, which_u="best", n_years=1, type="d") # what does n_years do?
par(mfrow=c(1, 1))
hist(x[x>best_u], probability=TRUE)
lines(pred$x, pred$y)
plot(var_cv, lwd = 2, add_legend = TRUE, legend_pos = "topright")
vline(best_u, col='r', lty='dashed')
abline(v=best_u, col='r', lty='dashed')
abline(v=best_u, col='red', lty='dashed')
hist(x, breaks=50)
abline(v=best_u, col='red', lty='dashed')
abline(v=best_u, col='red', lty='dashed', lwd=2)
library(threshr)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
var <- read.csv("/Users/alison/Documents/DPhil/multivariate/wind_data/total_dailymax.csv")
head(var[, c('X', 'time', 'cyclone_flag', 'X2')])
x <- var$X3
attr(x, 'npy') <- length(x) / 365
par(mfrow=c(2, 1))
hist(x, breaks=50)
q_vec <- seq(.7, .99, by=0.01)
u_vec <- quantile(x, q_vec)
var_cv <- ithresh(x, u_vec=u_vec, n_v=2)
# plot(var_cv, lwd = 2, add_legend = TRUE, legend_pos = "topright")
# mtext("climate variable [?]", side = 3, line = 2.5)
best_u <- getmode(summary(var_cv)[, "best u"])
best_i <- getmode(summary(var_cv)[, "index of u_vec"])
best_q <- q_vec[best_i]
abline(v=best_u, col='red', lty='dashed', lwd=2)
print(paste("best u:", best_u))
print(paste("best q:", best_q))
print(paste("number of excesses:", length(x[x>best_u])))
summary(var_cv)
pred <- predict(var_cv, which_u="best", n_years=10, type="d") # what does n_years do?
par(mfrow=c(1, 1))
hist(x[x>best_u], probability=TRUE)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
par(mfrow=c(2, 1))
hist(x, breaks=50)
q_vec <- seq(.7, .99, by=0.01)
u_vec <- quantile(x, q_vec)
var_cv <- ithresh(x, u_vec=u_vec, n_v=2)
# plot(var_cv, lwd = 2, add_legend = TRUE, legend_pos = "topright")
# mtext("climate variable [?]", side = 3, line = 2.5)
best_u <- getmode(summary(var_cv)[, "best u"])
best_i <- getmode(summary(var_cv)[, "index of u_vec"])
best_q <- q_vec[best_i]
abline(v=best_u, col='red', lty='dashed', lwd=2)
print(paste("best u:", best_u))
print(paste("best q:", best_q))
print(paste("number of excesses:", length(x[x>best_u])))
summary(var_cv)
pred <- predict(var_cv, which_u="best", n_years=10, type="d") # what does n_years do?
hist(x[x>best_u], probability=TRUE)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
par(mfrow=c(2, 1))
hist(x, breaks=50)
abline(v=best_u, col='red', lty='dashed', lwd=2)
lines(pred$x, pred$y, col='red', lwd=2)
hist(x[x>best_u], probability=TRUE)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
lines(pred$x, pred$y, col='red', lwd=2)
hist(x[x>best_u], probability=TRUE)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
library(threshr)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
var <- read.csv("/Users/alison/Documents/DPhil/multivariate/wind_data/total_dailymax.csv")
head(var[, c('X', 'time', 'cyclone_flag', 'X2')])
x <- var$X4
attr(x, 'npy') <- length(x) / 365
q_vec <- seq(.7, .99, by=0.01)
u_vec <- quantile(x, q_vec)
var_cv <- ithresh(x, u_vec=u_vec, n_v=2)
# plot(var_cv, lwd = 2, add_legend = TRUE, legend_pos = "topright")
# mtext("climate variable [?]", side = 3, line = 2.5)
best_u <- getmode(summary(var_cv)[, "best u"])
best_i <- getmode(summary(var_cv)[, "index of u_vec"])
best_q <- q_vec[best_i]
print(paste("best u:", best_u))
print(paste("best q:", best_q))
print(paste("number of excesses:", length(x[x>best_u])))
summary(var_cv)
pred <- predict(var_cv, which_u="best", n_years=10, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
library(threshr)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
var <- read.csv("/Users/alison/Documents/DPhil/multivariate/wind_data/total_dailymax.csv")
head(var[, c('X', 'time', 'cyclone_flag', 'X2')])
x <- var$X5
attr(x, 'npy') <- length(x) / 365
q_vec <- seq(.7, .99, by=0.01)
u_vec <- quantile(x, q_vec)
var_cv <- ithresh(x, u_vec=u_vec, n_v=2)
# plot(var_cv, lwd = 2, add_legend = TRUE, legend_pos = "topright")
# mtext("climate variable [?]", side = 3, line = 2.5)
best_u <- getmode(summary(var_cv)[, "best u"])
best_i <- getmode(summary(var_cv)[, "index of u_vec"])
best_q <- q_vec[best_i]
print(paste("best u:", best_u))
print(paste("best q:", best_q))
print(paste("number of excesses:", length(x[x>best_u])))
summary(var_cv)
pred <- predict(var_cv, which_u="best", n_years=10, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
pred <- predict(var_cv, which_u="best", n_years=11, type="d") # what does n_years do?
pred <- predict(var_cv, which_u="best", n_years=1, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
pred <- predict(var_cv, which_u="best", n_years=10, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
pred <- predict(var_cv, which_u="best", n_years=1, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
pred <- predict(var_cv, which_u="best", n_years=5, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
pred <- predict(var_cv, which_u="best", n_years=1, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
x <- var$X6
attr(x, 'npy') <- length(x) / 365
q_vec <- seq(.7, .99, by=0.01)
u_vec <- quantile(x, q_vec)
var_cv <- ithresh(x, u_vec=u_vec, n_v=2)
# plot(var_cv, lwd = 2, add_legend = TRUE, legend_pos = "topright")
# mtext("climate variable [?]", side = 3, line = 2.5)
best_u <- getmode(summary(var_cv)[, "best u"])
best_i <- getmode(summary(var_cv)[, "index of u_vec"])
best_q <- q_vec[best_i]
print(paste("best u:", best_u))
print(paste("best q:", best_q))
print(paste("number of excesses:", length(x[x>best_u])))
summary(var_cv)
pred <- predict(var_cv, which_u="best", n_years=1, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
pred <- predict(var_cv, which_u="best", n_years=10, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
pred <- predict(var_cv, which_u="best", n_years=1000, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
pred <- predict(var_cv, which_u="best", n_years=100, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
pred <- predict(var_cv, which_u="best", n_years=50, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
pred <- predict(var_cv, which_u="best", n_years=20, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
pred <- predict(var_cv, which_u="best", n_years=10, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
pred <- predict(var_cv, which_u="best", n_years=1, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
pred <- predict(var_cv, which_u="best", n_years=.1, type="d") # what does n_years do?
par(mfrow=c(2, 1))
hist(x, breaks=50, probability=TRUE)
abline(v=best_u, col='red', lty='dashed', lwd=2)
hist(x[x>best_u], probability=TRUE, breaks=50)
lines(pred$x, pred$y)
abline(v=best_u, col='red', lty='dashed', lwd=2)
mtext("Fitted Generalised Pareto for 10(?) years ", side = 3, line = 2.5)
numeric(10)
columns(var)
install.packages("reticulate")
library(threshr)
np <- import("numpy")
library(reticulate)
np <- import("numpy")
np <- import("numpy")
np
np$load("/Users/alison/Documents/DPhil/multivariate/wind_data/train/images.npy")
# data reading
mat <- np$load("/Users/alison/Documents/DPhil/multivariate/wind_data/train/images.npy")
mat
dim(mat)
dim(mat)[2]
M <- dim(mat)[3]
mat[,1, 1, 1]
length(mat[1,1,1,1])
length(mat[,1,1,1])
Q <- matrix(nrow=N, ncol=M)
N <- dim(mat)[2]
M <- dim(mat)[3]
Q <- matrix(nrow=N, ncol=M)
dim(Q)
# data reading
X <- np$load("/Users/alison/Documents/DPhil/multivariate/wind_data/train/images.npy")
N <- dim(mat)[2]
M <- dim(mat)[3]
Q <- matrix(nrow=N, ncol=M)
x <- mat[, i, j, 1]
i <- 1
j <- 1
x <- mat[, i, j, 1]
attr(x, 'npy') <- length(x) / 365
X$npy
x$npy
attr(x, 'npy') <- length(x) / 365
x$npy
var[,"X2"]
dtype(var[,"X2"])
type(var[,"X2"])
x$npy
type(gom)
gom$npy
library(threshr)
gom$npy
as.array(x)
x <- as.array(mat[, i, j, 1])
attr(x, 'npy') <- length(x) / 365
x
x$npy
is.atomic(x)
x <- as.data.frame(mat[, i, j, 1])
x
gom
x <- as.list(mat[, i, j, 1])
attr(x, 'npy') <- length(x) / 365
x$npy
attr(x, 'npy') <- length(x) / 365
x$npy
x <- as.matrix(mat[, i, j, 1])
attr(x, 'npy') <- length(x) / 365
x$npy
x <- as.array(mat[, i, j, 1])
attr(x, 'npy') <- length(x) / 365
x$npy
library(threshr)
gom
?gom
x <- as.numeric(mat[, i, j, 1])
attr(x, 'npy') <- length(x) / 365
x$npy
vec <- c(1, 2, 3)
# Convert the vector into a list
list_vec <- as.list(vec)
# Assign an attribute to the list
attr(list_vec, "attribute_name") <- "attribute_value"
# Access the attribute using the $ operation
list_vec$attribute_name
library(threshr)
class(gom)
gom$npy
is.atomic(npy)
is.atomic(gom)
ns
x <- mat[, i, j, 1]
attr(x, 'npy') <- length(x) / 365
x
library(reticulate)
library(threshr)
gom
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
np <- import("numpy")
# data reading
X <- np$load("/Users/alison/Documents/DPhil/multivariate/wind_data/train/images.npy")
N <- dim(mat)[2]
M <- dim(mat)[3]
Q <- matrix(nrow=N, ncol=M)
i <- 1
j <- 1
x <- mat[, i, j, 1]
attr(x, 'npy') <- length(x) / 365
q_vec <- seq(.7, .99, by=0.01)
u_vec <- quantile(x, q_vec)
var_cv <- ithresh(x, u_vec=u_vec, n_v=2)
library(reticulate)
library(threshr)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
np <- import("numpy")
# data reading
X <- np$load("/Users/alison/Documents/DPhil/multivariate/wind_data/train/images.npy")
N <- dim(mat)[2]
library(reticulate)
library(threshr)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
np <- import("numpy")
# data reading
X <- np$load("/Users/alison/Documents/DPhil/multivariate/wind_data/train/images.npy")
N <- dim(mat)[2]
library(reticulate)
library(threshr)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
np <- import("numpy")
# data reading
X <- np$load("/Users/alison/Documents/DPhil/multivariate/wind_data/train/images.npy")
N <- dim(X)[2]
M <- dim(X)[3]
Q <- matrix(nrow=N, ncol=M)
i <- 1
j <- 1
x <- X[, i, j, 1]
attr(x, 'npy') <- length(x) / 365
q_vec <- seq(.7, .99, by=0.01)
u_vec <- quantile(x, q_vec)
var_cv <- ithresh(x, u_vec=u_vec, n_v=2)
x['npy']
x$npy
x
x[,'npy']
as.data.frame(x)
x$npy
as.data.frame(x)$npy
x <- as.data.frame(X[, i, j, 1])
attr(x, 'npy') <- length(x) / 365
x$npy
x <- as.list(X[, i, j, 1])
x
x
x <- as.list(ravel(X[, i, j, 1]))
x <- as.list(c(X[, i, j, 1]))
x
x <- as.list(as.numeric(X[, i, j, 1]))
x
x <- X[, i, j, 1])
x <- X[, i, j, 1]
x
library(threshr)
gom
gom$test <- 1
gom
library(threshr)
gom
library(threshr)
library(threshr)
gom
typeof(gom)
