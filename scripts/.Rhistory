n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 50
max.allowed <- sort(x)[(length(x) - 50)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
#best_i <- getmode(summary(var_cv)[, "index of u_vec"])
#best_q <- q_vec[best_i]
best_f <- ecdf(x)(best_u)
f_mat[i, j] <- best_f
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
f_mat[i, j] <- 0.
u_mat[i, j] <- x[1]
}
}
}
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/thresholds.npy"), u_mat)
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/threshold_ecdfs.npy"), f_mat)
var <- 'precip_data'
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
f_mat <- matrix(nrow=M, ncol=N)  # matrix of corresponding ECDF values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 50
max.allowed <- sort(x)[(length(x) - 50)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
#best_i <- getmode(summary(var_cv)[, "index of u_vec"])
#best_q <- q_vec[best_i]
best_f <- ecdf(x)(best_u)
f_mat[i, j] <- best_f
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
f_mat[i, j] <- 0.
u_mat[i, j] <- x[1]
}
}
}
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/thresholds.npy"), u_mat)
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/threshold_ecdfs.npy"), f_mat)
i
j
best_u
x
x[x < best_u]
max(x[x <= best_u])
library(reticulate)
library(threshr)
library(knitr)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
np <- import("numpy")
var <- 'wave_data'
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
#f_mat <- matrix(nrow=M, ncol=N)  # matrix of corresponding ECDF values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 50
max.allowed <- sort(x)[(length(x) - 50)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
#best_i <- getmode(summary(var_cv)[, "index of u_vec"])
#best_q <- q_vec[best_i]
#best_f <- ecdf(x)(best_u)
best_u <- max(x[x <= best_u]) # use an actual observation as threshold, important for interpolating
#f_mat[i, j] <- best_f
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
#f_mat[i, j] <- 0.
u_mat[i, j] <- x[1]
}
}
}
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/thresholds.npy"), u_mat)
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/threshold_ecdfs.npy"), f_mat)
library(reticulate)
library(threshr)
library(knitr)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
np <- import("numpy")
var <- 'wind_data'
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
#f_mat <- matrix(nrow=M, ncol=N)  # matrix of corresponding ECDF values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 50
max.allowed <- sort(x)[(length(x) - 50)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
#best_i <- getmode(summary(var_cv)[, "index of u_vec"])
#best_q <- q_vec[best_i]
#best_f <- ecdf(x)(best_u)
best_u <- max(x[x <= best_u]) # use an actual observation as threshold, important for interpolating
#f_mat[i, j] <- best_f
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
#f_mat[i, j] <- 0.
u_mat[i, j] <- x[1]
}
}
}
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/thresholds.npy"), u_mat)
library(reticulate)
library(threshr)
library(knitr)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
np <- import("numpy")
var <- 'precip_data'
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 50
max.allowed <- sort(x)[(length(x) - 50)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
best_u <- max(x[x <= best_u]) # use an actual observation as threshold, important for interpolating
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
u_mat[i, j] <- x[1]
}
}
}
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/thresholds.npy"), u_mat)
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 50
max.allowed <- sort(x)[(length(x) - 50)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
best_u <- max(x[x <= best_u]) # use an actual observation as threshold, important for interpolating
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
u_mat[i, j] <- x[1]
}
}
}
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/thresholds.npy"), u_mat)
var <- 'wind_data'
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 50
max.allowed <- sort(x)[(length(x) - 50)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
best_u <- max(x[x <= best_u]) # use an actual observation as threshold, important for interpolating
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
u_mat[i, j] <- x[1]
}
}
}
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/thresholds.npy"), u_mat)
var <- 'wave_data'
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 50
max.allowed <- sort(x)[(length(x) - 50)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
best_u <- max(x[x <= best_u]) # use an actual observation as threshold, important for interpolating
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
u_mat[i, j] <- x[1]
}
}
}
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/thresholds.npy"), u_mat)
library(reticulate)
library(threshr)
library(knitr)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
np <- import("numpy")
var <- 'wind_data'
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 10
max.allowed <- sort(x)[(length(x) - 10)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
best_u <- max(x[x <= best_u]) # use an actual observation as threshold, important for interpolating
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
u_mat[i, j] <- x[1]
}
}
}
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/thresholds.npy"), u_mat)
var <- 'wind_data'
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 10
max.allowed <- sort(x)[(length(x) - 30)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
best_u <- max(x[x <= best_u]) # use an actual observation as threshold, important for interpolating
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
u_mat[i, j] <- x[1]
}
}
}
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/thresholds.npy"), u_mat)
var <- 'wind_data'
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 10
max.allowed <- sort(x)[(length(x) - 30)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
best_u <- max(x[x <= best_u]) # use an actual observation as threshold, important for interpolating
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
u_mat[i, j] <- x[1]
}
}
}
library(reticulate)
library(threshr)
library(knitr)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
np <- import("numpy")
var <- 'wind_data'
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 10
max.allowed <- sort(x)[(length(x) - 50)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
best_u <- max(x[x <= best_u]) # use an actual observation as threshold, important for interpolating
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
u_mat[i, j] <- x[1]
}
}
}
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/thresholds.npy"), u_mat)
var <- 'wave_data'
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 10
max.allowed <- sort(x)[(length(x) - 50)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
best_u <- max(x[x <= best_u]) # use an actual observation as threshold, important for interpolating
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
u_mat[i, j] <- x[1]
}
}
}
var <- 'wave_data'
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 10
max.allowed <- sort(x)[(length(x) - 50)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
best_u <- max(x[x <= best_u]) # use an actual observation as threshold, important for interpolating
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
u_mat[i, j] <- x[1]
}
}
}
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/thresholds.npy"), u_mat)
var <- 'precip_data'
X <- np$load(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/images.npy"))
M <- dim(X)[2]
N <- dim(X)[3]
u_mat <- matrix(nrow=M, ncol=N)  # matrix of threshold values
n.excesses <- matrix(nrow=M, ncol=N)
for(i in 1:M){
for(j in 1:N){
x <- X[, i, j, 1]
if(var(x) > 0){
npy <- 365 # observations for every day of the year
attr(x, 'npy') <- npy
# restrict search so that number of excesses always >= 10
max.allowed <- sort(x)[(length(x) - 50)]
max.quantile <- ecdf(x)(max.allowed)
q_vec <- seq(.6, max.quantile, by=0.01)
u_vec <- quantile(x, p=q_vec)
suppressWarnings({
var_cv <- ithresh(x, u_vec=u_vec)
})
best_u <- getmode(summary(var_cv)[, "best u"])
best_u <- max(x[x <= best_u]) # use an actual observation as threshold, important for interpolating
u_mat[i, j] <- best_u
n.excesses[i, j] <- length(x[x > best_u])
}else{
u_mat[i, j] <- x[1]
}
}
}
np$save(paste0("/Users/alison/Documents/DPhil/multivariate/", var, "/train/thresholds.npy"), u_mat)
